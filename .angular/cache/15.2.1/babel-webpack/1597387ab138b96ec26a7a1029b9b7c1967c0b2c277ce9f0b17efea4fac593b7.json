{"ast":null,"code":"import _asyncToGenerator from \"/home/olivio-gits/programacionIV/Peliculas/peliculas/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { firebaseConfig } from 'src/environments/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class DataServiceService {\n  constructor(afAuth) {\n    this.afAuth = afAuth;\n    this.initialState = {\n      peliculas: [],\n      user: {}\n    };\n    this.stateSubject = new BehaviorSubject(this.initialState); //definimos nuestro stateSubject\n    this.state$ = this.stateSubject.asObservable();\n    firebase.initializeApp(firebaseConfig.firebase);\n  }\n  ngOnInit() {}\n  // async checkAuth() {\n  //   console.log('Check')\n  //   const token = localStorage.getItem('authToken');\n  //   console.log(token)\n  //   if (token) {\n  //     try {\n  //       const userCredential = await firebase.auth().signInWithCustomToken(token);\n  //       const user = userCredential.user;\n  //       const obj: User = {\n  //         name: user?.displayName,\n  //         email: user?.email,\n  //         image: user?.photoURL,\n  //       }\n  //       const currentState = this.stateSubject.value;\n  //       this.stateSubject.next({\n  //         ...currentState,\n  //         user:{\n  //           user: obj,\n  //           token: token\n  //         }\n  //       });\n  //     } catch (error) {\n  //       console.log('Error en la autenticación automática', error);\n  //     }\n  //   }\n  // }\n  getAllMoviesHandler() {\n    return _asyncToGenerator(function* () {\n      getAllMovies();\n    })();\n  }\n  signInWithGoogle() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let obj;\n      const currentState = _this.stateSubject.value;\n      const provider = new firebase.auth.GoogleAuthProvider();\n      _this.afAuth.signInWithPopup(provider).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (result) {\n          console.log(result.user);\n          const token = result.user._delegate.stsTokenManager.accessToken; //recuperar token\n          if (result.user) {\n            obj = {\n              name: result.user.displayName,\n              email: result.user.email,\n              image: result.user.photoURL\n            };\n            yield localStorage.setItem('authToken', token); //guardar mi token\n            _this.stateSubject.next({\n              ...currentState,\n              user: {\n                user: obj,\n                token: token\n              }\n            });\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n  signOut() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const currentState = _this2.stateSubject.value;\n      yield _this2.afAuth.signOut();\n      // Eliminar token de localStorage y propiedad user del servicio\n      localStorage.removeItem('authToken');\n      _this2.stateSubject.next({\n        ...currentState,\n        user: {\n          user: 'null',\n          token: 'null'\n        }\n      });\n    })();\n  }\n}\nDataServiceService.ɵfac = function DataServiceService_Factory(t) {\n  return new (t || DataServiceService)(i0.ɵɵinject(i1.AngularFireAuth));\n};\nDataServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServiceService,\n  factory: DataServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;AACtC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAI7B,SAASC,cAAc,QAAQ,iCAAiC;;;AAIhE,OAAM,MAAOC,kBAAkB;EAE7BC,YACUC,MAAuB;IAAvB,WAAM,GAANA,MAAM;IAKR,iBAAY,GAAa;MAC/BC,SAAS,EAAC,EAAE;MACZC,IAAI,EAAC;KACN;IACO,iBAAY,GAAG,IAAIP,eAAe,CAAc,IAAI,CAACQ,YAAY,CAAC,CAAC,CAAC;IAC5E,WAAM,GAAG,IAAI,CAACC,YAAY,CAACC,YAAY,EAAE;IARvCT,QAAQ,CAACU,aAAa,CAACT,cAAc,CAACD,QAAQ,CAAC;EACjD;EASAW,QAAQ,IAER;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACMC,mBAAmB;IAAA;MACvBC,YAAY,EAAE;IAAA;EAChB;EACMC,gBAAgB;IAAA;IAAA;MACpB,IAAIC,GAAQ;MACZ,MAAMC,YAAY,GAAG,KAAI,CAACR,YAAY,CAACS,KAAK;MAC5C,MAAMC,QAAQ,GAAG,IAAIlB,QAAQ,CAACmB,IAAI,CAACC,kBAAkB,EAAE;MACvD,KAAI,CAAChB,MAAM,CAACiB,eAAe,CAACH,QAAQ,CAAC,CACpCI,IAAI;QAAA,6BAAC,WAAMC,MAAM,EAAG;UACnBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACjB,IAAI,CAAC;UACxB,MAAMoB,KAAK,GAAIH,MAAM,CAACjB,IAAY,CAACqB,SAAS,CAACC,eAAe,CAACC,WAAW,CAAC,CAAC;UAC1E,IAAGN,MAAM,CAACjB,IAAI,EAAC;YACbS,GAAG,GAAC;cACFe,IAAI,EAAEP,MAAM,CAACjB,IAAI,CAACyB,WAAW;cAC7BC,KAAK,EAACT,MAAM,CAACjB,IAAI,CAAC0B,KAAK;cACvBC,KAAK,EAACV,MAAM,CAACjB,IAAI,CAAC4B;aACnB;YACD,MAAMC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEV,KAAK,CAAC,CAAC,CAAC;YAChD,KAAI,CAAClB,YAAY,CAAC6B,IAAI,CAAC;cACrB,GAAGrB,YAAY;cACfV,IAAI,EAAC;gBACHA,IAAI,EAAES,GAAG;gBACTW,KAAK,EAAEA;;aAEV,CAAC;;QAEN,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IAAA;EACJ;EAEMY,OAAO;IAAA;IAAA;MACX,MAAMtB,YAAY,GAAG,MAAI,CAACR,YAAY,CAACS,KAAK;MAC5C,MAAM,MAAI,CAACb,MAAM,CAACkC,OAAO,EAAE;MAC3B;MACAH,YAAY,CAACI,UAAU,CAAC,WAAW,CAAC;MACpC,MAAI,CAAC/B,YAAY,CAAC6B,IAAI,CAAC;QACrB,GAAGrB,YAAY;QACfV,IAAI,EAAC;UACHA,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAC;;OAET,CAAC;IAAA;EACJ;;AAtFWxB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAsC,SAAlBtC,kBAAkB;EAAAuC,YAFjB;AAAM","names":["BehaviorSubject","firebase","firebaseConfig","DataServiceService","constructor","afAuth","peliculas","user","initialState","stateSubject","asObservable","initializeApp","ngOnInit","getAllMoviesHandler","getAllMovies","signInWithGoogle","obj","currentState","value","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","console","log","token","_delegate","stsTokenManager","accessToken","name","displayName","email","image","photoURL","localStorage","setItem","next","signOut","removeItem","factory","providedIn"],"sourceRoot":"","sources":["/home/olivio-gits/programacionIV/Peliculas/peliculas/src/app/services/data-service.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { DataService } from '../models/modelService';\nimport { User } from '../models/modelUser';\nimport { firebaseConfig } from 'src/environments/firebaseConfig';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService implements OnInit {\n\n  constructor(\n    private afAuth: AngularFireAuth\n  ) {\n    firebase.initializeApp(firebaseConfig.firebase)\n  }\n\n  private initialState:DataService={ //definimos nuestro estado en base a nuestro modelo DataService\n    peliculas:[],\n    user:{}\n  }\n  private stateSubject = new BehaviorSubject<DataService>(this.initialState); //definimos nuestro stateSubject\n  state$ = this.stateSubject.asObservable();\n\n  ngOnInit() {\n\n  }\n\n  // async checkAuth() {\n  //   console.log('Check')\n  //   const token = localStorage.getItem('authToken');\n  //   console.log(token)\n  //   if (token) {\n  //     try {\n  //       const userCredential = await firebase.auth().signInWithCustomToken(token);\n  //       const user = userCredential.user;\n  //       const obj: User = {\n  //         name: user?.displayName,\n  //         email: user?.email,\n  //         image: user?.photoURL,\n  //       }\n  //       const currentState = this.stateSubject.value;\n  //       this.stateSubject.next({\n  //         ...currentState,\n  //         user:{\n  //           user: obj,\n  //           token: token\n  //         }\n  //       });\n  //     } catch (error) {\n  //       console.log('Error en la autenticación automática', error);\n  //     }\n  //   }\n  // }\n  async getAllMoviesHandler(){\n    getAllMovies()\n  }\n  async signInWithGoogle() {\n    let obj:User;\n    const currentState = this.stateSubject.value;\n    const provider = new firebase.auth.GoogleAuthProvider();\n    this.afAuth.signInWithPopup(provider)\n    .then(async(result)=>{ //usuario logeado\n      console.log(result.user)\n      const token = (result.user as any)._delegate.stsTokenManager.accessToken; //recuperar token\n      if(result.user){\n        obj={\n          name: result.user.displayName,\n          email:result.user.email,\n          image:result.user.photoURL,\n        }\n        await localStorage.setItem('authToken', token); //guardar mi token\n        this.stateSubject.next({\n          ...currentState,\n          user:{\n            user: obj,\n            token: token\n          }\n        })  \n      }\n    }) \n  };\n\n  async signOut() {\n    const currentState = this.stateSubject.value;\n    await this.afAuth.signOut();\n    // Eliminar token de localStorage y propiedad user del servicio\n    localStorage.removeItem('authToken');\n    this.stateSubject.next({\n      ...currentState,\n      user:{\n        user:'null',\n        token:'null'\n      }\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}